// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CollaboratorArgs, CollaboratorState } from "./collaborator";
export type Collaborator = import("./collaborator").Collaborator;
export const Collaborator: typeof import("./collaborator").Collaborator = null as any;
utilities.lazyLoad(exports, ["Collaborator"], () => require("./collaborator"));

export { GetMembersArgs, GetMembersResult, GetMembersOutputArgs } from "./getMembers";
export const getMembers: typeof import("./getMembers").getMembers = null as any;
export const getMembersOutput: typeof import("./getMembers").getMembersOutput = null as any;
utilities.lazyLoad(exports, ["getMembers","getMembersOutput"], () => require("./getMembers"));

export { GetTeamArgs, GetTeamResult, GetTeamOutputArgs } from "./getTeam";
export const getTeam: typeof import("./getTeam").getTeam = null as any;
export const getTeamOutput: typeof import("./getTeam").getTeamOutput = null as any;
utilities.lazyLoad(exports, ["getTeam","getTeamOutput"], () => require("./getTeam"));

export { MemberArgs, MemberState } from "./member";
export type Member = import("./member").Member;
export const Member: typeof import("./member").Member = null as any;
utilities.lazyLoad(exports, ["Member"], () => require("./member"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "heroku:team/collaborator:Collaborator":
                return new Collaborator(name, <any>undefined, { urn })
            case "heroku:team/member:Member":
                return new Member(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("heroku", "team/collaborator", _module)
pulumi.runtime.registerResourceModule("heroku", "team/member", _module)
