// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getApp(args: GetAppArgs, opts?: pulumi.InvokeOptions): Promise<GetAppResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("heroku:app/getApp:getApp", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getApp.
 */
export interface GetAppArgs {
    name: string;
}

/**
 * A collection of values returned by getApp.
 */
export interface GetAppResult {
    readonly acm: boolean;
    readonly buildpacks: string[];
    readonly configVars: {[key: string]: any};
    readonly gitUrl: string;
    readonly herokuHostname: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly internalRouting: boolean;
    readonly name: string;
    readonly organizations: outputs.app.GetAppOrganization[];
    readonly region: string;
    readonly space: string;
    readonly stack: string;
    readonly uuid: string;
    readonly webUrl: string;
}
export function getAppOutput(args: GetAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppResult> {
    return pulumi.output(args).apply((a: any) => getApp(a, opts))
}

/**
 * A collection of arguments for invoking getApp.
 */
export interface GetAppOutputArgs {
    name: pulumi.Input<string>;
}
