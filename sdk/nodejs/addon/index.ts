// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AddonArgs, AddonState } from "./addon";
export type Addon = import("./addon").Addon;
export const Addon: typeof import("./addon").Addon = null as any;
utilities.lazyLoad(exports, ["Addon"], () => require("./addon"));

export { AttachmentArgs, AttachmentState } from "./attachment";
export type Attachment = import("./attachment").Attachment;
export const Attachment: typeof import("./attachment").Attachment = null as any;
utilities.lazyLoad(exports, ["Attachment"], () => require("./attachment"));

export { GetAddonArgs, GetAddonResult, GetAddonOutputArgs } from "./getAddon";
export const getAddon: typeof import("./getAddon").getAddon = null as any;
export const getAddonOutput: typeof import("./getAddon").getAddonOutput = null as any;
utilities.lazyLoad(exports, ["getAddon","getAddonOutput"], () => require("./getAddon"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "heroku:addon/addon:Addon":
                return new Addon(name, <any>undefined, { urn })
            case "heroku:addon/attachment:Attachment":
                return new Attachment(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("heroku", "addon/addon", _module)
pulumi.runtime.registerResourceModule("heroku", "addon/attachment", _module)
