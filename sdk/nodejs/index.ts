// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


// Export sub-modules:
import * as account from "./account";
import * as addon from "./addon";
import * as app from "./app";
import * as build from "./build";
import * as cert from "./cert";
import * as collaborator from "./collaborator";
import * as config from "./config";
import * as domain from "./domain";
import * as drain from "./drain";
import * as formation from "./formation";
import * as pipeline from "./pipeline";
import * as review from "./review";
import * as slug from "./slug";
import * as space from "./space";
import * as ssl from "./ssl";
import * as team from "./team";
import * as types from "./types";

export {
    account,
    addon,
    app,
    build,
    cert,
    collaborator,
    config,
    domain,
    drain,
    formation,
    pipeline,
    review,
    slug,
    space,
    ssl,
    team,
    types,
};
pulumi.runtime.registerResourcePackage("heroku", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:heroku") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
