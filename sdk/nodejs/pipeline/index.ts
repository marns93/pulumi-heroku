// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConfigVarArgs, ConfigVarState } from "./configVar";
export type ConfigVar = import("./configVar").ConfigVar;
export const ConfigVar: typeof import("./configVar").ConfigVar = null as any;
utilities.lazyLoad(exports, ["ConfigVar"], () => require("./configVar"));

export { CouplingArgs, CouplingState } from "./coupling";
export type Coupling = import("./coupling").Coupling;
export const Coupling: typeof import("./coupling").Coupling = null as any;
utilities.lazyLoad(exports, ["Coupling"], () => require("./coupling"));

export { GetPipelineArgs, GetPipelineResult, GetPipelineOutputArgs } from "./getPipeline";
export const getPipeline: typeof import("./getPipeline").getPipeline = null as any;
export const getPipelineOutput: typeof import("./getPipeline").getPipelineOutput = null as any;
utilities.lazyLoad(exports, ["getPipeline","getPipelineOutput"], () => require("./getPipeline"));

export { PipelineArgs, PipelineState } from "./pipeline";
export type Pipeline = import("./pipeline").Pipeline;
export const Pipeline: typeof import("./pipeline").Pipeline = null as any;
utilities.lazyLoad(exports, ["Pipeline"], () => require("./pipeline"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "heroku:pipeline/configVar:ConfigVar":
                return new ConfigVar(name, <any>undefined, { urn })
            case "heroku:pipeline/coupling:Coupling":
                return new Coupling(name, <any>undefined, { urn })
            case "heroku:pipeline/pipeline:Pipeline":
                return new Pipeline(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("heroku", "pipeline/configVar", _module)
pulumi.runtime.registerResourceModule("heroku", "pipeline/coupling", _module)
pulumi.runtime.registerResourceModule("heroku", "pipeline/pipeline", _module)
