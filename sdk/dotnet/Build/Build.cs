// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Heroku.Build
{
    [HerokuResourceType("heroku:build/build:Build")]
    public partial class Build : global::Pulumi.CustomResource
    {
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        [Output("buildpacks")]
        public Output<ImmutableArray<string>> Buildpacks { get; private set; } = null!;

        [Output("localChecksum")]
        public Output<string> LocalChecksum { get; private set; } = null!;

        [Output("outputStreamUrl")]
        public Output<string> OutputStreamUrl { get; private set; } = null!;

        [Output("releaseId")]
        public Output<string> ReleaseId { get; private set; } = null!;

        [Output("slugId")]
        public Output<string> SlugId { get; private set; } = null!;

        [Output("source")]
        public Output<Outputs.BuildSource> Source { get; private set; } = null!;

        [Output("stack")]
        public Output<string> Stack { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("users")]
        public Output<ImmutableArray<Outputs.BuildUser>> Users { get; private set; } = null!;

        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a Build resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Build(string name, BuildArgs args, CustomResourceOptions? options = null)
            : base("heroku:build/build:Build", name, args ?? new BuildArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Build(string name, Input<string> id, BuildState? state = null, CustomResourceOptions? options = null)
            : base("heroku:build/build:Build", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Build resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Build Get(string name, Input<string> id, BuildState? state = null, CustomResourceOptions? options = null)
        {
            return new Build(name, id, state, options);
        }
    }

    public sealed class BuildArgs : global::Pulumi.ResourceArgs
    {
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("buildpacks")]
        private InputList<string>? _buildpacks;
        public InputList<string> Buildpacks
        {
            get => _buildpacks ?? (_buildpacks = new InputList<string>());
            set => _buildpacks = value;
        }

        [Input("source", required: true)]
        public Input<Inputs.BuildSourceArgs> Source { get; set; } = null!;

        public BuildArgs()
        {
        }
        public static new BuildArgs Empty => new BuildArgs();
    }

    public sealed class BuildState : global::Pulumi.ResourceArgs
    {
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        [Input("buildpacks")]
        private InputList<string>? _buildpacks;
        public InputList<string> Buildpacks
        {
            get => _buildpacks ?? (_buildpacks = new InputList<string>());
            set => _buildpacks = value;
        }

        [Input("localChecksum")]
        public Input<string>? LocalChecksum { get; set; }

        [Input("outputStreamUrl")]
        public Input<string>? OutputStreamUrl { get; set; }

        [Input("releaseId")]
        public Input<string>? ReleaseId { get; set; }

        [Input("slugId")]
        public Input<string>? SlugId { get; set; }

        [Input("source")]
        public Input<Inputs.BuildSourceGetArgs>? Source { get; set; }

        [Input("stack")]
        public Input<string>? Stack { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("users")]
        private InputList<Inputs.BuildUserGetArgs>? _users;
        public InputList<Inputs.BuildUserGetArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.BuildUserGetArgs>());
            set => _users = value;
        }

        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public BuildState()
        {
        }
        public static new BuildState Empty => new BuildState();
    }
}
